/*
User Api Gateway REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pubclient

import (
	"encoding/json"
)

// checks if the ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees{}

// ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees # GatewayRegulatoryFees Represents various regulatory fees associated with trading orders. <br/> ## Fields - **secFee** - The SEC charges a regulatory fee for sell orders that execute. The fee is based on the dollar amount of the order. - **tafFee** - The Trading Activity Fee is a FINRA fee. The fee is based on the order quantity. - **orfFee** - The Options Regulatory Fee (ORF). This is the combined exchange fee rate for all exchanges. Changes monthly. - **exchangeFee** - The exchange charges a fee for executing orders for index options. - **occFee** - The Options Clearing Corporation Fee (OCC) - **catFee** - The Consolidated Audit Trail Fee (CAT)
type ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees struct {
	SecFee *string `json:"secFee,omitempty"`
	TafFee *string `json:"tafFee,omitempty"`
	OrfFee *string `json:"orfFee,omitempty"`
	ExchangeFee *string `json:"exchangeFee,omitempty"`
	OccFee *string `json:"occFee,omitempty"`
	CatFee *string `json:"catFee,omitempty"`
}

// NewComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees instantiates a new ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees() *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees {
	this := ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees{}
	return &this
}

// NewComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFeesWithDefaults instantiates a new ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFeesWithDefaults() *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees {
	this := ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees{}
	return &this
}

// GetSecFee returns the SecFee field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetSecFee() string {
	if o == nil || IsNil(o.SecFee) {
		var ret string
		return ret
	}
	return *o.SecFee
}

// GetSecFeeOk returns a tuple with the SecFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetSecFeeOk() (*string, bool) {
	if o == nil || IsNil(o.SecFee) {
		return nil, false
	}
	return o.SecFee, true
}

// HasSecFee returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) HasSecFee() bool {
	if o != nil && !IsNil(o.SecFee) {
		return true
	}

	return false
}

// SetSecFee gets a reference to the given string and assigns it to the SecFee field.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) SetSecFee(v string) {
	o.SecFee = &v
}

// GetTafFee returns the TafFee field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetTafFee() string {
	if o == nil || IsNil(o.TafFee) {
		var ret string
		return ret
	}
	return *o.TafFee
}

// GetTafFeeOk returns a tuple with the TafFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetTafFeeOk() (*string, bool) {
	if o == nil || IsNil(o.TafFee) {
		return nil, false
	}
	return o.TafFee, true
}

// HasTafFee returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) HasTafFee() bool {
	if o != nil && !IsNil(o.TafFee) {
		return true
	}

	return false
}

// SetTafFee gets a reference to the given string and assigns it to the TafFee field.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) SetTafFee(v string) {
	o.TafFee = &v
}

// GetOrfFee returns the OrfFee field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetOrfFee() string {
	if o == nil || IsNil(o.OrfFee) {
		var ret string
		return ret
	}
	return *o.OrfFee
}

// GetOrfFeeOk returns a tuple with the OrfFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetOrfFeeOk() (*string, bool) {
	if o == nil || IsNil(o.OrfFee) {
		return nil, false
	}
	return o.OrfFee, true
}

// HasOrfFee returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) HasOrfFee() bool {
	if o != nil && !IsNil(o.OrfFee) {
		return true
	}

	return false
}

// SetOrfFee gets a reference to the given string and assigns it to the OrfFee field.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) SetOrfFee(v string) {
	o.OrfFee = &v
}

// GetExchangeFee returns the ExchangeFee field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetExchangeFee() string {
	if o == nil || IsNil(o.ExchangeFee) {
		var ret string
		return ret
	}
	return *o.ExchangeFee
}

// GetExchangeFeeOk returns a tuple with the ExchangeFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetExchangeFeeOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeFee) {
		return nil, false
	}
	return o.ExchangeFee, true
}

// HasExchangeFee returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) HasExchangeFee() bool {
	if o != nil && !IsNil(o.ExchangeFee) {
		return true
	}

	return false
}

// SetExchangeFee gets a reference to the given string and assigns it to the ExchangeFee field.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) SetExchangeFee(v string) {
	o.ExchangeFee = &v
}

// GetOccFee returns the OccFee field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetOccFee() string {
	if o == nil || IsNil(o.OccFee) {
		var ret string
		return ret
	}
	return *o.OccFee
}

// GetOccFeeOk returns a tuple with the OccFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetOccFeeOk() (*string, bool) {
	if o == nil || IsNil(o.OccFee) {
		return nil, false
	}
	return o.OccFee, true
}

// HasOccFee returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) HasOccFee() bool {
	if o != nil && !IsNil(o.OccFee) {
		return true
	}

	return false
}

// SetOccFee gets a reference to the given string and assigns it to the OccFee field.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) SetOccFee(v string) {
	o.OccFee = &v
}

// GetCatFee returns the CatFee field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetCatFee() string {
	if o == nil || IsNil(o.CatFee) {
		var ret string
		return ret
	}
	return *o.CatFee
}

// GetCatFeeOk returns a tuple with the CatFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) GetCatFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CatFee) {
		return nil, false
	}
	return o.CatFee, true
}

// HasCatFee returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) HasCatFee() bool {
	if o != nil && !IsNil(o.CatFee) {
		return true
	}

	return false
}

// SetCatFee gets a reference to the given string and assigns it to the CatFee field.
func (o *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) SetCatFee(v string) {
	o.CatFee = &v
}

func (o ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecFee) {
		toSerialize["secFee"] = o.SecFee
	}
	if !IsNil(o.TafFee) {
		toSerialize["tafFee"] = o.TafFee
	}
	if !IsNil(o.OrfFee) {
		toSerialize["orfFee"] = o.OrfFee
	}
	if !IsNil(o.ExchangeFee) {
		toSerialize["exchangeFee"] = o.ExchangeFee
	}
	if !IsNil(o.OccFee) {
		toSerialize["occFee"] = o.OccFee
	}
	if !IsNil(o.CatFee) {
		toSerialize["catFee"] = o.CatFee
	}
	return toSerialize, nil
}

type NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees struct {
	value *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees
	isSet bool
}

func (v NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) Get() *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees {
	return v.value
}

func (v *NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) Set(val *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) {
	v.value = val
	v.isSet = true
}

func (v NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) IsSet() bool {
	return v.isSet
}

func (v *NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees(val *ComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) *NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees {
	return &NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees{value: val, isSet: true}
}

func (v NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComHellopublicUserapigatewayApiRestPreflightGatewayRegulatoryFees) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


