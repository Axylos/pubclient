/*
User Api Gateway REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pubclient

import (
	"encoding/json"
	"fmt"
)

// ComHellopublicUserapigatewayApiRestUserAccountKycObjective the model 'ComHellopublicUserapigatewayApiRestUserAccountKycObjective'
type ComHellopublicUserapigatewayApiRestUserAccountKycObjective string

// List of com_hellopublic_userapigateway_api_rest_user_AccountKyc_objective
const (
	GROWTH_INCOME ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "GROWTH_INCOME"
	GROWTH ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "GROWTH"
	INCOME ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "INCOME"
	CAPITAL_PRESERVATION ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "CAPITAL_PRESERVATION"
	SPECULATION ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "SPECULATION"
	MAXIMUM_GROWTH ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "MAXIMUM_GROWTH"
	BALANCED ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "BALANCED"
	OTHER ComHellopublicUserapigatewayApiRestUserAccountKycObjective = "OTHER"
)

// All allowed values of ComHellopublicUserapigatewayApiRestUserAccountKycObjective enum
var AllowedComHellopublicUserapigatewayApiRestUserAccountKycObjectiveEnumValues = []ComHellopublicUserapigatewayApiRestUserAccountKycObjective{
	"GROWTH_INCOME",
	"GROWTH",
	"INCOME",
	"CAPITAL_PRESERVATION",
	"SPECULATION",
	"MAXIMUM_GROWTH",
	"BALANCED",
	"OTHER",
}

func (v *ComHellopublicUserapigatewayApiRestUserAccountKycObjective) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ComHellopublicUserapigatewayApiRestUserAccountKycObjective(value)
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestUserAccountKycObjectiveEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ComHellopublicUserapigatewayApiRestUserAccountKycObjective", value)
}

// NewComHellopublicUserapigatewayApiRestUserAccountKycObjectiveFromValue returns a pointer to a valid ComHellopublicUserapigatewayApiRestUserAccountKycObjective
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComHellopublicUserapigatewayApiRestUserAccountKycObjectiveFromValue(v string) (*ComHellopublicUserapigatewayApiRestUserAccountKycObjective, error) {
	ev := ComHellopublicUserapigatewayApiRestUserAccountKycObjective(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ComHellopublicUserapigatewayApiRestUserAccountKycObjective: valid values are %v", v, AllowedComHellopublicUserapigatewayApiRestUserAccountKycObjectiveEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComHellopublicUserapigatewayApiRestUserAccountKycObjective) IsValid() bool {
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestUserAccountKycObjectiveEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to com_hellopublic_userapigateway_api_rest_user_AccountKyc_objective value
func (v ComHellopublicUserapigatewayApiRestUserAccountKycObjective) Ptr() *ComHellopublicUserapigatewayApiRestUserAccountKycObjective {
	return &v
}

type NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective struct {
	value *ComHellopublicUserapigatewayApiRestUserAccountKycObjective
	isSet bool
}

func (v NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective) Get() *ComHellopublicUserapigatewayApiRestUserAccountKycObjective {
	return v.value
}

func (v *NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective) Set(val *ComHellopublicUserapigatewayApiRestUserAccountKycObjective) {
	v.value = val
	v.isSet = true
}

func (v NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective) IsSet() bool {
	return v.isSet
}

func (v *NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComHellopublicUserapigatewayApiRestUserAccountKycObjective(val *ComHellopublicUserapigatewayApiRestUserAccountKycObjective) *NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective {
	return &NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective{value: val, isSet: true}
}

func (v NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComHellopublicUserapigatewayApiRestUserAccountKycObjective) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

