/*
User Api Gateway REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pubclient

import (
	"encoding/json"
	"fmt"
)

// ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType the model 'ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType'
type ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType string

// List of com_hellopublic_userapigateway_api_rest_order_GatewayLegInstrument_type
const (
	EQUITY ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType = "EQUITY"
	OPTION ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType = "OPTION"
)

// All allowed values of ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType enum
var AllowedComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentTypeEnumValues = []ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType{
	"EQUITY",
	"OPTION",
}

func (v *ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType(value)
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType", value)
}

// NewComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentTypeFromValue returns a pointer to a valid ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentTypeFromValue(v string) (*ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType, error) {
	ev := ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType: valid values are %v", v, AllowedComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) IsValid() bool {
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to com_hellopublic_userapigateway_api_rest_order_GatewayLegInstrument_type value
func (v ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) Ptr() *ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType {
	return &v
}

type NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType struct {
	value *ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType
	isSet bool
}

func (v NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) Get() *ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType {
	return v.value
}

func (v *NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) Set(val *ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) {
	v.value = val
	v.isSet = true
}

func (v NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) IsSet() bool {
	return v.isSet
}

func (v *NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType(val *ComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) *NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType {
	return &NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType{value: val, isSet: true}
}

func (v NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComHellopublicUserapigatewayApiRestOrderGatewayLegInstrumentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

