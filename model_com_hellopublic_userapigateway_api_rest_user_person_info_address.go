/*
User Api Gateway REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pubclient

import (
	"encoding/json"
)

// checks if the ComHellopublicUserapigatewayApiRestUserPersonInfoAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComHellopublicUserapigatewayApiRestUserPersonInfoAddress{}

// ComHellopublicUserapigatewayApiRestUserPersonInfoAddress struct for ComHellopublicUserapigatewayApiRestUserPersonInfoAddress
type ComHellopublicUserapigatewayApiRestUserPersonInfoAddress struct {
	Street1 *string `json:"street1,omitempty"`
	Street2 *string `json:"street2,omitempty"`
	City *string `json:"city,omitempty"`
	ZipCode *string `json:"zipCode,omitempty"`
	State *string `json:"state,omitempty"`
	Country *string `json:"country,omitempty"`
}

// NewComHellopublicUserapigatewayApiRestUserPersonInfoAddress instantiates a new ComHellopublicUserapigatewayApiRestUserPersonInfoAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComHellopublicUserapigatewayApiRestUserPersonInfoAddress() *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress {
	this := ComHellopublicUserapigatewayApiRestUserPersonInfoAddress{}
	return &this
}

// NewComHellopublicUserapigatewayApiRestUserPersonInfoAddressWithDefaults instantiates a new ComHellopublicUserapigatewayApiRestUserPersonInfoAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComHellopublicUserapigatewayApiRestUserPersonInfoAddressWithDefaults() *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress {
	this := ComHellopublicUserapigatewayApiRestUserPersonInfoAddress{}
	return &this
}

// GetStreet1 returns the Street1 field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetStreet1() string {
	if o == nil || IsNil(o.Street1) {
		var ret string
		return ret
	}
	return *o.Street1
}

// GetStreet1Ok returns a tuple with the Street1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetStreet1Ok() (*string, bool) {
	if o == nil || IsNil(o.Street1) {
		return nil, false
	}
	return o.Street1, true
}

// HasStreet1 returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) HasStreet1() bool {
	if o != nil && !IsNil(o.Street1) {
		return true
	}

	return false
}

// SetStreet1 gets a reference to the given string and assigns it to the Street1 field.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) SetStreet1(v string) {
	o.Street1 = &v
}

// GetStreet2 returns the Street2 field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetStreet2() string {
	if o == nil || IsNil(o.Street2) {
		var ret string
		return ret
	}
	return *o.Street2
}

// GetStreet2Ok returns a tuple with the Street2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetStreet2Ok() (*string, bool) {
	if o == nil || IsNil(o.Street2) {
		return nil, false
	}
	return o.Street2, true
}

// HasStreet2 returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) HasStreet2() bool {
	if o != nil && !IsNil(o.Street2) {
		return true
	}

	return false
}

// SetStreet2 gets a reference to the given string and assigns it to the Street2 field.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) SetStreet2(v string) {
	o.Street2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) SetCity(v string) {
	o.City = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode) {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetZipCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ZipCode) {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) HasZipCode() bool {
	if o != nil && !IsNil(o.ZipCode) {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) SetCountry(v string) {
	o.Country = &v
}

func (o ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Street1) {
		toSerialize["street1"] = o.Street1
	}
	if !IsNil(o.Street2) {
		toSerialize["street2"] = o.Street2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.ZipCode) {
		toSerialize["zipCode"] = o.ZipCode
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	return toSerialize, nil
}

type NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress struct {
	value *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress
	isSet bool
}

func (v NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress) Get() *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress {
	return v.value
}

func (v *NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress) Set(val *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress(val *ComHellopublicUserapigatewayApiRestUserPersonInfoAddress) *NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress {
	return &NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress{value: val, isSet: true}
}

func (v NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComHellopublicUserapigatewayApiRestUserPersonInfoAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


