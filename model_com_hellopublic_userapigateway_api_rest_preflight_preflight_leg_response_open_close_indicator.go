/*
User Api Gateway REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pubclient

import (
	"encoding/json"
	"fmt"
)

// ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator the model 'ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator'
type ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator string

// List of com_hellopublic_userapigateway_api_rest_preflight_PreflightLegResponse_openCloseIndicator
const (
	OPEN ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator = "OPEN"
	CLOSE ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator = "CLOSE"
)

// All allowed values of ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator enum
var AllowedComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicatorEnumValues = []ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator{
	"OPEN",
	"CLOSE",
}

func (v *ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator(value)
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicatorEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator", value)
}

// NewComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicatorFromValue returns a pointer to a valid ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicatorFromValue(v string) (*ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator, error) {
	ev := ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator: valid values are %v", v, AllowedComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicatorEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) IsValid() bool {
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicatorEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to com_hellopublic_userapigateway_api_rest_preflight_PreflightLegResponse_openCloseIndicator value
func (v ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) Ptr() *ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator {
	return &v
}

type NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator struct {
	value *ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator
	isSet bool
}

func (v NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) Get() *ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator {
	return v.value
}

func (v *NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) Set(val *ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) {
	v.value = val
	v.isSet = true
}

func (v NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) IsSet() bool {
	return v.isSet
}

func (v *NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator(val *ComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) *NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator {
	return &NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator{value: val, isSet: true}
}

func (v NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComHellopublicUserapigatewayApiRestPreflightPreflightLegResponseOpenCloseIndicator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

