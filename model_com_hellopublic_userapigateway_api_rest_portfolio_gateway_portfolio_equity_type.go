/*
User Api Gateway REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pubclient

import (
	"encoding/json"
	"fmt"
)

// ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType Type of asset.
type ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType string

// List of com_hellopublic_userapigateway_api_rest_portfolio_GatewayPortfolioEquity_type
const (
	STOCK ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "STOCK"
	OPTIONS_LONG ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "OPTIONS_LONG"
	OPTIONS_SHORT ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "OPTIONS_SHORT"
	BONDS ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "BONDS"
	CRYPTO ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "CRYPTO"
	ALT ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "ALT"
	TREASURY_ACCOUNT ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "TREASURY_ACCOUNT"
	JIKO ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "JIKO"
	HIGH_YIELD_ACCOUNT ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "HIGH_YIELD_ACCOUNT"
	BOND_ACCOUNT ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "BOND_ACCOUNT"
	CASH ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType = "CASH"
)

// All allowed values of ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType enum
var AllowedComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityTypeEnumValues = []ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType{
	"STOCK",
	"OPTIONS_LONG",
	"OPTIONS_SHORT",
	"BONDS",
	"CRYPTO",
	"ALT",
	"TREASURY_ACCOUNT",
	"JIKO",
	"HIGH_YIELD_ACCOUNT",
	"BOND_ACCOUNT",
	"CASH",
}

func (v *ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType(value)
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType", value)
}

// NewComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityTypeFromValue returns a pointer to a valid ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityTypeFromValue(v string) (*ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType, error) {
	ev := ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType: valid values are %v", v, AllowedComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) IsValid() bool {
	for _, existing := range AllowedComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to com_hellopublic_userapigateway_api_rest_portfolio_GatewayPortfolioEquity_type value
func (v ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) Ptr() *ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType {
	return &v
}

type NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType struct {
	value *ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType
	isSet bool
}

func (v NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) Get() *ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType {
	return v.value
}

func (v *NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) Set(val *ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) {
	v.value = val
	v.isSet = true
}

func (v NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) IsSet() bool {
	return v.isSet
}

func (v *NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType(val *ComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) *NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType {
	return &NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType{value: val, isSet: true}
}

func (v NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComHellopublicUserapigatewayApiRestPortfolioGatewayPortfolioEquityType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

