/*
User Api Gateway REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pubclient

import (
	"encoding/json"
	"time"
)

// checks if the ComHellopublicUserapigatewayApiRestOrderGatewayOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComHellopublicUserapigatewayApiRestOrderGatewayOrder{}

// ComHellopublicUserapigatewayApiRestOrderGatewayOrder struct for ComHellopublicUserapigatewayApiRestOrderGatewayOrder
type ComHellopublicUserapigatewayApiRestOrderGatewayOrder struct {
	OrderId *string `json:"orderId,omitempty"`
	Instrument *ComHellopublicUserapigatewayApiRestOrderGatewayOrderInstrument `json:"instrument,omitempty"`
	// Creation time of the order
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Type *string `json:"type,omitempty"`
	Side *string `json:"side,omitempty"`
	Status *string `json:"status,omitempty"`
	// Quantity of the order, mutually exclusive with notional value
	Quantity *string `json:"quantity,omitempty"`
	// Notional value (dollar amount) of the order, mutually exclusive with quantity
	NotionalValue *string `json:"notionalValue,omitempty"`
	Expiration *ComHellopublicUserapigatewayApiRestOrderOrderExpiration `json:"expiration,omitempty"`
	// Present if type = LIMIT
	LimitPrice *string `json:"limitPrice,omitempty"`
	// Present if type = STOP
	StopPrice *string `json:"stopPrice,omitempty"`
	// The time the order reached a terminal state, like CANCELLED, FILLED, REJECTED, REPLACED
	ClosedAt *time.Time `json:"closedAt,omitempty"`
	// Present if the order is a single-leg option order
	OpenCloseIndicator *string `json:"openCloseIndicator,omitempty"`
	// The filled quantity of the order, present if the order had at least one trade
	FilledQuantity *string `json:"filledQuantity,omitempty"`
	// The average price per unit, present if the order had at least one trade
	AveragePrice *string `json:"averagePrice,omitempty"`
	// If instrument.type = MULTI_LEG_INSTRUMENT, this contains the list of legs
	Legs []ComHellopublicUserapigatewayApiRestOrderGatewayOrderLeg `json:"legs,omitempty"`
}

// NewComHellopublicUserapigatewayApiRestOrderGatewayOrder instantiates a new ComHellopublicUserapigatewayApiRestOrderGatewayOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComHellopublicUserapigatewayApiRestOrderGatewayOrder() *ComHellopublicUserapigatewayApiRestOrderGatewayOrder {
	this := ComHellopublicUserapigatewayApiRestOrderGatewayOrder{}
	return &this
}

// NewComHellopublicUserapigatewayApiRestOrderGatewayOrderWithDefaults instantiates a new ComHellopublicUserapigatewayApiRestOrderGatewayOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComHellopublicUserapigatewayApiRestOrderGatewayOrderWithDefaults() *ComHellopublicUserapigatewayApiRestOrderGatewayOrder {
	this := ComHellopublicUserapigatewayApiRestOrderGatewayOrder{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetOrderId(v string) {
	o.OrderId = &v
}

// GetInstrument returns the Instrument field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetInstrument() ComHellopublicUserapigatewayApiRestOrderGatewayOrderInstrument {
	if o == nil || IsNil(o.Instrument) {
		var ret ComHellopublicUserapigatewayApiRestOrderGatewayOrderInstrument
		return ret
	}
	return *o.Instrument
}

// GetInstrumentOk returns a tuple with the Instrument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetInstrumentOk() (*ComHellopublicUserapigatewayApiRestOrderGatewayOrderInstrument, bool) {
	if o == nil || IsNil(o.Instrument) {
		return nil, false
	}
	return o.Instrument, true
}

// HasInstrument returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasInstrument() bool {
	if o != nil && !IsNil(o.Instrument) {
		return true
	}

	return false
}

// SetInstrument gets a reference to the given ComHellopublicUserapigatewayApiRestOrderGatewayOrderInstrument and assigns it to the Instrument field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetInstrument(v ComHellopublicUserapigatewayApiRestOrderGatewayOrderInstrument) {
	o.Instrument = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetType(v string) {
	o.Type = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetSide() string {
	if o == nil || IsNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetSideOk() (*string, bool) {
	if o == nil || IsNil(o.Side) {
		return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasSide() bool {
	if o != nil && !IsNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetSide(v string) {
	o.Side = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetStatus(v string) {
	o.Status = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetQuantity() string {
	if o == nil || IsNil(o.Quantity) {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetQuantity(v string) {
	o.Quantity = &v
}

// GetNotionalValue returns the NotionalValue field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetNotionalValue() string {
	if o == nil || IsNil(o.NotionalValue) {
		var ret string
		return ret
	}
	return *o.NotionalValue
}

// GetNotionalValueOk returns a tuple with the NotionalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetNotionalValueOk() (*string, bool) {
	if o == nil || IsNil(o.NotionalValue) {
		return nil, false
	}
	return o.NotionalValue, true
}

// HasNotionalValue returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasNotionalValue() bool {
	if o != nil && !IsNil(o.NotionalValue) {
		return true
	}

	return false
}

// SetNotionalValue gets a reference to the given string and assigns it to the NotionalValue field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetNotionalValue(v string) {
	o.NotionalValue = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetExpiration() ComHellopublicUserapigatewayApiRestOrderOrderExpiration {
	if o == nil || IsNil(o.Expiration) {
		var ret ComHellopublicUserapigatewayApiRestOrderOrderExpiration
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetExpirationOk() (*ComHellopublicUserapigatewayApiRestOrderOrderExpiration, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given ComHellopublicUserapigatewayApiRestOrderOrderExpiration and assigns it to the Expiration field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetExpiration(v ComHellopublicUserapigatewayApiRestOrderOrderExpiration) {
	o.Expiration = &v
}

// GetLimitPrice returns the LimitPrice field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetLimitPrice() string {
	if o == nil || IsNil(o.LimitPrice) {
		var ret string
		return ret
	}
	return *o.LimitPrice
}

// GetLimitPriceOk returns a tuple with the LimitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetLimitPriceOk() (*string, bool) {
	if o == nil || IsNil(o.LimitPrice) {
		return nil, false
	}
	return o.LimitPrice, true
}

// HasLimitPrice returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasLimitPrice() bool {
	if o != nil && !IsNil(o.LimitPrice) {
		return true
	}

	return false
}

// SetLimitPrice gets a reference to the given string and assigns it to the LimitPrice field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetLimitPrice(v string) {
	o.LimitPrice = &v
}

// GetStopPrice returns the StopPrice field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetStopPrice() string {
	if o == nil || IsNil(o.StopPrice) {
		var ret string
		return ret
	}
	return *o.StopPrice
}

// GetStopPriceOk returns a tuple with the StopPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetStopPriceOk() (*string, bool) {
	if o == nil || IsNil(o.StopPrice) {
		return nil, false
	}
	return o.StopPrice, true
}

// HasStopPrice returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasStopPrice() bool {
	if o != nil && !IsNil(o.StopPrice) {
		return true
	}

	return false
}

// SetStopPrice gets a reference to the given string and assigns it to the StopPrice field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetStopPrice(v string) {
	o.StopPrice = &v
}

// GetClosedAt returns the ClosedAt field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetClosedAt() time.Time {
	if o == nil || IsNil(o.ClosedAt) {
		var ret time.Time
		return ret
	}
	return *o.ClosedAt
}

// GetClosedAtOk returns a tuple with the ClosedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetClosedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedAt) {
		return nil, false
	}
	return o.ClosedAt, true
}

// HasClosedAt returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasClosedAt() bool {
	if o != nil && !IsNil(o.ClosedAt) {
		return true
	}

	return false
}

// SetClosedAt gets a reference to the given time.Time and assigns it to the ClosedAt field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetClosedAt(v time.Time) {
	o.ClosedAt = &v
}

// GetOpenCloseIndicator returns the OpenCloseIndicator field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetOpenCloseIndicator() string {
	if o == nil || IsNil(o.OpenCloseIndicator) {
		var ret string
		return ret
	}
	return *o.OpenCloseIndicator
}

// GetOpenCloseIndicatorOk returns a tuple with the OpenCloseIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetOpenCloseIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.OpenCloseIndicator) {
		return nil, false
	}
	return o.OpenCloseIndicator, true
}

// HasOpenCloseIndicator returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasOpenCloseIndicator() bool {
	if o != nil && !IsNil(o.OpenCloseIndicator) {
		return true
	}

	return false
}

// SetOpenCloseIndicator gets a reference to the given string and assigns it to the OpenCloseIndicator field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetOpenCloseIndicator(v string) {
	o.OpenCloseIndicator = &v
}

// GetFilledQuantity returns the FilledQuantity field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetFilledQuantity() string {
	if o == nil || IsNil(o.FilledQuantity) {
		var ret string
		return ret
	}
	return *o.FilledQuantity
}

// GetFilledQuantityOk returns a tuple with the FilledQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetFilledQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.FilledQuantity) {
		return nil, false
	}
	return o.FilledQuantity, true
}

// HasFilledQuantity returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasFilledQuantity() bool {
	if o != nil && !IsNil(o.FilledQuantity) {
		return true
	}

	return false
}

// SetFilledQuantity gets a reference to the given string and assigns it to the FilledQuantity field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetFilledQuantity(v string) {
	o.FilledQuantity = &v
}

// GetAveragePrice returns the AveragePrice field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetAveragePrice() string {
	if o == nil || IsNil(o.AveragePrice) {
		var ret string
		return ret
	}
	return *o.AveragePrice
}

// GetAveragePriceOk returns a tuple with the AveragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetAveragePriceOk() (*string, bool) {
	if o == nil || IsNil(o.AveragePrice) {
		return nil, false
	}
	return o.AveragePrice, true
}

// HasAveragePrice returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasAveragePrice() bool {
	if o != nil && !IsNil(o.AveragePrice) {
		return true
	}

	return false
}

// SetAveragePrice gets a reference to the given string and assigns it to the AveragePrice field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetAveragePrice(v string) {
	o.AveragePrice = &v
}

// GetLegs returns the Legs field value if set, zero value otherwise.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetLegs() []ComHellopublicUserapigatewayApiRestOrderGatewayOrderLeg {
	if o == nil || IsNil(o.Legs) {
		var ret []ComHellopublicUserapigatewayApiRestOrderGatewayOrderLeg
		return ret
	}
	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) GetLegsOk() ([]ComHellopublicUserapigatewayApiRestOrderGatewayOrderLeg, bool) {
	if o == nil || IsNil(o.Legs) {
		return nil, false
	}
	return o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) HasLegs() bool {
	if o != nil && !IsNil(o.Legs) {
		return true
	}

	return false
}

// SetLegs gets a reference to the given []ComHellopublicUserapigatewayApiRestOrderGatewayOrderLeg and assigns it to the Legs field.
func (o *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) SetLegs(v []ComHellopublicUserapigatewayApiRestOrderGatewayOrderLeg) {
	o.Legs = v
}

func (o ComHellopublicUserapigatewayApiRestOrderGatewayOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComHellopublicUserapigatewayApiRestOrderGatewayOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.Instrument) {
		toSerialize["instrument"] = o.Instrument
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.NotionalValue) {
		toSerialize["notionalValue"] = o.NotionalValue
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.LimitPrice) {
		toSerialize["limitPrice"] = o.LimitPrice
	}
	if !IsNil(o.StopPrice) {
		toSerialize["stopPrice"] = o.StopPrice
	}
	if !IsNil(o.ClosedAt) {
		toSerialize["closedAt"] = o.ClosedAt
	}
	if !IsNil(o.OpenCloseIndicator) {
		toSerialize["openCloseIndicator"] = o.OpenCloseIndicator
	}
	if !IsNil(o.FilledQuantity) {
		toSerialize["filledQuantity"] = o.FilledQuantity
	}
	if !IsNil(o.AveragePrice) {
		toSerialize["averagePrice"] = o.AveragePrice
	}
	if !IsNil(o.Legs) {
		toSerialize["legs"] = o.Legs
	}
	return toSerialize, nil
}

type NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder struct {
	value *ComHellopublicUserapigatewayApiRestOrderGatewayOrder
	isSet bool
}

func (v NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder) Get() *ComHellopublicUserapigatewayApiRestOrderGatewayOrder {
	return v.value
}

func (v *NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder) Set(val *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComHellopublicUserapigatewayApiRestOrderGatewayOrder(val *ComHellopublicUserapigatewayApiRestOrderGatewayOrder) *NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder {
	return &NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder{value: val, isSet: true}
}

func (v NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComHellopublicUserapigatewayApiRestOrderGatewayOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


